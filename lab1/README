1. Простейший конвеер машинного обучения
Срок заканчивается 1 марта 2024 г., 23:59
Инструкции
#Цель задания:
В этом задании вы решите простую учебную задачу по созданию автоматического конвейера проекта машинного обучения.  Подобный подход с применением простых скриптов автоматизации для “склейки” отдельных частей конвейера используется в небольших проектах.

#Содержание задания:
Необходимо из “подручных средств” создать простейший конвейер для автоматизации работы с моделью машинного обучения. Отдельные этапы конвейера машинного обучения описываются в разных python–скриптах, которые потом соединяются (иногда используют термин “склеиваются”) с помощью bash-скрипта. Вам нужно разработать скрипты для подготовки данных, предобработки данных обучения модели, валидации и сохранения модели. А также сделать конвеер запуска этих скриптов последовательно.

Для сохранения модели можно вопрользоваться https://rukovodstvo.net/posts/id_1322/

#Этапы:
1.	Создайте python-скрипт (data_creation.py), который создает различные наборы данных, описывающие некий процесс (например, изменение дневной температуры). Таких наборов должно быть несколько, в некоторые данные можно включить аномалии или шумы. Можно взять готовый датасет, и выкачать его из интернета. Часть наборов данных должны быть сохранены в папке “train”, другая часть в папке “test”.
2.	создайте python-скрипт (model_preprocessing.py), который выполняет предобработку данных, например, с помощью sklearn.preprocessing.StandardScaler.
3.	создайте python-скрипт (model_preparation.py), который создает и обучает модель машинного обучения на построенных данных из папки “train”.
4.	создайте python-скрипт (model_testing.py), проверяющий модель машинного обучения на построенных данных из папки “test”.
5.	Напишите bash-скрипт (pipeline.sh), последовательно запускающий все python-скрипты.

Подготовленные скрипты необходимо опубликовать в git репозитории, ссылку на который необходимо предоставить как результат выполнения задания.
В качестве примера, можно посмотреть структура каталогов из репозитория https://github.com/korelin/mlops_practice


Module 1
Сведения

Необходимо из создать простейший конвейер для автоматизации работы с моделью машинного обучения.

Отдельные этапы конвейера машинного обучения описываются в разных python–скриптах, которые потом соединяются в единую цепочку действий с помощью bash-скрипта.

Все файлы необходимо разместить в подкаталоге lab1 корневого каталога

Этапы:

Создайте python-скрипт (data_creation.py), который создает различные наборы данных, описывающие некий процесс. Таких наборов должно быть несколько, в некоторые данные можно включить аномалии или шумы. Часть наборов данных должны быть сохранены в папке “train”, другая часть в папке “test”. Одним из вариантов выполнения этого этапа может быть скачивание набора данных из сети, и разделение выборки на тестовую и обучающую. Учтите, что файл должен быть доступен и методы скачивания либо есть в ubuntu либо устанавливаются через pip в файле pipeline.sh
Создайте python-скрипт (data_preprocessing.py), который выполняет предобработку данных. Трансформации выполняются и над тестовой и над обучающей выборкой.
Создайте python-скрипт (model_preparation.py), который создает и обучает модель машинного обучения на построенных данных из папки “train”.
Создайте python-скрипт (model_testing.py), проверяющий модель машинного обучения на построенных данных из папки “test”.
Напишите bash-скрипт (pipeline.sh), последовательно запускающий все python-скрипты. При необходимости усложните скрипт. В результате выполнения скрипта на терминал в стандартный поток вывода печатается одна строка с оценкой метрики на вашей модели
Запуск
Загрузите в каталог kaggle.json. Инструкцию можно посмотреть здесь.

Запустите ./pipeline.sh

Описание датасета
Датасет взят из kaggle, использованы данные о кредитовании за 2007-2010 годы для модели классификации.

Описание столбцов и замены пропусков

Столбец	Данные	Тип	Наличие пропусков	Способ замены	Способ преобразования
Gender	Male/Female	категориальный	5	Male	OrdinalEncoder
Married	Yes/No	категориальный	0	-	OrdinalEncoder
Dependents	0/1/2/3+	категориальный	8	0	OrdinalEncoder
Education	Graduate/Not Graduate	категориальный	0	-	OrdinalEncoder
Self_Employed	Yes/No	категориальный	21	No	OrdinalEncoder
ApplicantIncome	150-9703	числовые	0	-	StandardScaler
CoapplicantIncome	0-33837	числовые	0	-	StandardScaler
LoanAmount	9-150	числовые	0	-	StandardScaler
Loan_Amount_Term	12-480	числовые	11	360	StandardScaler
Credit_History	1/0	категориальный	30	0	OrdinalEncoder
Property_Area	Rural/Urban/Semiurban	категориальный	0	-	OrdinalEncoder
Loan_Status (целевой)	Y/N	категориальный	0	-	LabelEncoder
Для обучения модели использована Логистическая регрессия. Вывод осуществляется в консоль.

Accuracy: 0.753 || Precision: 0.794 || Recall: 0.893 || F1 score: 0.84


